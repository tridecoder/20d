---
// src/pages/index.astro
import Navigation from '../components/Navigation.astro';
import "../styles/global.css";
---

<html lang="es">
<head>
	<meta charset="UTF-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<meta name="robots" content="noindex, nofollow">
	<title>20 de diciembre de 2025 — ¡Prepárate!</title>
	<link rel="preconnect" href="https://fonts.googleapis.com">
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
	<link href="https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap" rel="stylesheet">
</head>
<body>
	<div id="auth-wrapper">
		<div id="password-gate" class="password-overlay" style="display: none;">
			<form class="password-form" id="loginForm">
				<h2>Introduce la contraseña</h2>
				<input type="password" placeholder="contraseña" id="passwordInput" />
				<button type="submit">Entrar</button>
				<p id="error-message" class="error-message"></p>
			</form>
		</div>

		<!-- Envolvemos todo el contenido principal en un <main> para mostrarlo/ocultarlo fácilmente -->
		<main id="main-content" style="display: none;">
			<section id="inicio" class="hero">
				<video autoplay muted loop playsinline class="background-video base">
					<source src="/matadero1.mp4" type="video/mp4" />
				</video>

				<video autoplay muted loop playsinline class="background-video fx">
					<source src="/matadero1.mp4" type="video/mp4" />
				</video>

				<div class="overlay">
					<div class="animated-title">
						<div class="text-top">
							<div>
								<span>PREPÁRATE</span>
								<span>20 de diciembre de 2025 – Madrid</span>
							</div>
						</div>
						<div class="text-bottom">
							<div id="countdown" class="countdown">Cargando...</div>
						</div>
						<!-- El componente de navegación ahora está aquí -->
						
					</div>
				</div>
				
				<Navigation />
					
			</section>

			<!-- NUEVAS SECCIONES DE LA PÁGINA -->
			<section id="peqe" class="content-section">
				<h2>¡Pero esto qué es!</h2>
				<p>Has llegado hasta aquí. Eso es que tenías la contraseña de acceso, y en estos momentos te estarás preguntando de qué va esto.</p>
				<p>Pues bien, además de saberte la contraseña, tienes que conocer a Sebas, a Javi (aka iko, Bitxu, Francis, Saralegui, etc.), o más probablemente a los dos.</p>
				<p>Por si no lo recuerdas, te damos una pista...</p>
				<p>Son éstos:</p>
				<div class="imagen-entrada">
					<img src="/sebiko2.png" alt="Sebiko en la cama" class="img-glass animada-esquina" />
				  </div>
				<p>Y te quieren invitar a su boda. Hace ya más de 25 años que se conocen, así que va siendo hora de que formalicen lo suyo.</p>
			</section>

			<section id="evento" class="content-section alternate">
				<h2>Cuándo y dónde</h2>
				<p>La hora la sabemos, pero el punto exacto (Invernadero o Casa del Reloj), no.</p>
			</section>

			<section id="alojamiento" class="content-section">
				<h2>Cosas útiles</h2>
				<p>Aquí el dresscode y movidas varias de cómo moverse por los sitios</p>
			</section>

			<section id="regalos" class="content-section alternate">
				<h2>Contribuye</h2>
				<p>El número de cuenta</p>
			</section>

			<section id="rsvp" class="content-section">
				<h2>¿Vienes?</h2>
				<p>Formulario de confirmación</p>
			</section>
		</main>
	</div>

	<script type="module">
		const HASH = "a712badfa7d1ad21dfd0ee8cf5499f9981e653429cd3e2f0a3a33e291096ad1b";
		const KEY = "wedding-auth";
		const loginForm = document.getElementById("loginForm");
		const passwordInput = document.getElementById("passwordInput");
		const gate = document.getElementById("password-gate");
		// Modificamos para apuntar al contenedor principal
		const mainContent = document.getElementById("main-content");
		const errorMessage = document.getElementById("error-message");

		const encoder = new TextEncoder();

		async function hashPassword(pwd) {
			const data = encoder.encode(pwd);
			const hashBuffer = await crypto.subtle.digest("SHA-256", data);
			const hashArray = Array.from(new Uint8Array(hashBuffer));
			return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');
		}

		async function checkAccess() {
			const stored = localStorage.getItem(KEY);
			if (stored === HASH) {
				// Mostramos todo el contenido principal
				mainContent.style.display = "block";
			} else {
				gate.style.display = "grid";
			}
		}

		loginForm.addEventListener("submit", async (e) => {
			e.preventDefault();
			const input = passwordInput.value.trim();
			const inputHash = await hashPassword(input);
			if (inputHash === HASH) {
				localStorage.setItem(KEY, HASH);
				location.reload();
			} else {
				errorMessage.textContent = "Contraseña incorrecta";
				loginForm.classList.add("shake");
				setTimeout(() => loginForm.classList.remove("shake"), 600);
			}
		});

		checkAccess();

		// Cuenta atrás (sin cambios)
		const targetDate = new Date("2025-12-20T12:45:00");
		const countdownEl = document.getElementById("countdown");

		function updateCountdown() {
			const now = new Date();
			const diff = targetDate - now;
			if (diff <= 0) {
				countdownEl.innerText = "¡Ya es el día!";
				return;
			}

			const days = Math.floor(diff / (1000 * 60 * 60 * 24));
			const hours = Math.floor((diff / (1000 * 60 * 60)) % 24);
			const minutes = Math.floor((diff / (1000 * 60)) % 60);
			const seconds = Math.floor((diff / 1000) % 60);

			countdownEl.innerText = `Faltan ${days}d ${hours}h ${minutes}m ${seconds}s`;
		}

		setInterval(updateCountdown, 1000);
		updateCountdown();
		
		const imgs = document.querySelectorAll('.animada-esquina');
		
		  const observer = new IntersectionObserver((entries) => {
			entries.forEach(entry => {
			  if (entry.isIntersecting) {
				entry.target.classList.add('visible');
				observer.unobserve(entry.target); // solo una vez
			  }
			});
		  }, {
			threshold: 0.5,
		  });
		
		  imgs.forEach(img => observer.observe(img));
	</script>

	<style>
		/* AÑADIMOS EL SCROLL SUAVE AQUÍ */
		html {
			scroll-behavior: smooth;
		}

		/* Estilos de la contraseña (sin cambios) */
		.password-overlay {
			position: fixed;
			inset: 0;
			z-index: 9999;
			background: black;
			color: white;
			display: grid;
			place-items: center;
			font-family: sans-serif;
		}

		.password-form {
			background: #111;
			padding: 2rem;
			border-radius: 1rem;
			display: flex;
			flex-direction: column;
			gap: 1rem;
			min-width: 280px;
			text-align: center;
			transition: transform 0.3s ease;
		}

		.password-form input {
			padding: 0.5rem;
			font-size: 1rem;
			border: none;
			border-radius: 0.5rem;
		}

		.password-form button {
			background: rgb(50, 112, 0);
			color: rgb(255, 255, 255);
			font-weight: bold;
			border: none;
			padding: 0.5rem;
			border-radius: 0.5rem;
			cursor: pointer;
			font-size: 1rem;
			text-transform: uppercase;
		}

		.error-message {
			color: red;
			font-size: 0.9rem;
			margin-top: -0.5rem;
		}

		.shake {
			animation: shake 0.4s ease-in-out;
		}

		@keyframes shake {
			0% { transform: translateX(0); }
			25% { transform: translateX(-5px); }
			50% { transform: translateX(5px); }
			75% { transform: translateX(-5px); }
			100% { transform: translateX(0); }
		}
	</style>
</body>
</html>
